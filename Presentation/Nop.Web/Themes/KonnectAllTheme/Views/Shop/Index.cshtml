@model ShopModel
@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings


@{
    Layout = "_Root";
    ViewBag.BodyClass = "shop-page";
    //title
    if (!string.IsNullOrEmpty(seoSettings.HomepageTitle))
    {
        NopHtml.AddTitleParts(seoSettings.HomepageTitle);
    }

    //meta
    if (!string.IsNullOrEmpty(seoSettings.HomepageDescription))
    {
        NopHtml.AddMetaDescriptionParts(seoSettings.HomepageDescription);
    }

    //page class
    NopHtml.AppendPageCssClassParts("html-shop-page");

    var banner1 = Model.Categories.Count() >= 1 ? Model.Categories[0] : null;
    var banner2 = @Model.Categories.Count() >= 2 ? Model.Categories[1] : null;
    var banner3 = @Model.Categories.Count() >= 3 ? Model.Categories[2] : null;
    var banner4 = @Model.Categories.Count() >= 4 ? Model.Categories[3] : null;
    var banner5 = @Model.Categories.Count() >= 5 ? Model.Categories[4] : null;
    var banner6 = @Model.Categories.Count() >= 6 ? Model.Categories[5] : null;


}

@section HomePageSlider{
    <div class="slider">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CategoryDetailsTop })
    </div>
}

@{
    await Html.RenderPartialAsync("ShippingMethods.cshtml");
}

@if (Model.BannerCategories.Count >= 2)
{
    int i = 0;
    <section class="container collection">
        <div class="row">
            @foreach (var item in Model.BannerCategories.Take(2))
            {
                <div class="col-md-6 col-sm-6 right-collection">
                    <img alt="" src="@item?.ImageUrl" class="collection-img">
                    <div class="content-collection-sect ">
                        <div class="font-normal @(i == 0 ? "text-white" : "text-black") text-small">@item?.Name</div>
                        <h2 class="@(i == 0 ? "text-white" : "text-black") text-left">@item?.Name</h2>
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.Name" itemprop="item" class="@(i == 0 ? "btn-sm-white" : "btn-sm-black") btn-border">
                            <span class="@(i == 0 ? "text-white" : "text-black") font-normal">@T("global.shopnow")</span>
                        </a>
                    </div>
                </div>
                i++;
            }            
        </div>
    </section>
}


<div id="shopPageDealOfDayContainer">
    @await Component.InvokeAsync("HomepageDealOfDay")
</div>

@await Component.InvokeAsync("PopularCategories")


@foreach (var item in Model.Categories)
{
    await Html.RenderPartialAsync("CategoryDetails.cshtml", item);
}

<script src="../Themes/KonnectAllTheme/Content/js/slide-product.js"></script>
<script src="../Themes/KonnectAllTheme/Content/js/layout.js"></script>

@if (Model.BannerCategories.Count >= 3)
{
    int i = 0;
    <section class="container decora-crafts">
        <div class="row">
            @foreach (var item in Model.BannerCategories.Skip(2))
            {
                <div class="@(i == 1 ? "col-md-6" : "col-md-3") col-sm-6 left-content">
                    <div></div>
                    <img src="@item?.ImageUrl" class="img-decora" alt="@item?.Name">
                    <div class="content-decora-sect ">
                        <div class="font-light text-white text-small">@item?.Name</div>
                        <h2 class="text-white text-left">@item?.Name</h2>
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.Name" itemprop="item" class="btn-sm-white">
                            <span class="text-white font-normal">@T("global.shopnow")</span>
                        </a>
                    </div>
                </div>
                i++;
            }
        </div>
    </section>
}

@await Component.InvokeAsync("VendorNavigation")

<script>

    function ShowProductsOfCategory_details(parentCategId, selectedSubCategId) {
        var postData = { "selectedCategryId": selectedSubCategId };

        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("LoadCategoryProductsComponent", "Shop"))",
            data: postData,
            error: function (jqXHR, textStatus, errorThrown) {
                showAlert('showProduct', errorThrown);
            },
            success: function (data, textStatus, jqXHR) {
                $('#' + parentCategId).html(data);
            }
        });
    }

</script>